<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Operations;


class Issues
{
    /**
     * Validation error code. The retrieved value will drive which extra fields will be shown.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Operations\AccountRegisterApplePayDomainsCode $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Operations\AccountRegisterApplePayDomainsCode>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountRegisterApplePayDomainsCode $code = null;
    
    /**
     * Expected field type. It is only retrieved when `code = invalid_type`.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Operations\Expected $expected
     */
	#[\JMS\Serializer\Annotation\SerializedName('expected')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Operations\Expected>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Expected $expected = null;
    
    /**
     * Whether the minimum or maximum is included in the range of acceptable values. It is only retrieved when `code = too_small` or `code = too_big`.
     * 
     * @var ?bool $inclusive
     */
	#[\JMS\Serializer\Annotation\SerializedName('inclusive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inclusive = null;
    
    /**
     * The expected maximum length/value. It is only retrieved when `code = too_big`.
     * 
     * @var ?float $maximum
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximum')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maximum = null;
    
    /**
     * Message explaining the validation error.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * The expected minimum length/value. It is only retrieved when `code = too_small`.
     * 
     * @var ?float $minimum
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimum')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minimum = null;
    
    /**
     * Field location in the request body.
     * 
     * @var ?array<string> $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $path = null;
    
    /**
     * Field type received. It is only retrieved when `code = invalid_type`.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Operations\Received $received
     */
	#[\JMS\Serializer\Annotation\SerializedName('received')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Operations\Received>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Received $received = null;
    
    /**
     * The type of the data failing validation. It is only retrieved when `code = too_small` or `code = too_big`.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Operations\AccountRegisterApplePayDomainsType $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Operations\AccountRegisterApplePayDomainsType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountRegisterApplePayDomainsType $type = null;
    
	public function __construct()
	{
		$this->code = null;
		$this->expected = null;
		$this->inclusive = null;
		$this->maximum = null;
		$this->message = null;
		$this->minimum = null;
		$this->path = null;
		$this->received = null;
		$this->type = null;
	}
}

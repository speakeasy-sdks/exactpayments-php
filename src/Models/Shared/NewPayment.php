<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Shared;


class NewPayment
{
    /**
     * The amount for the new Payment.
     * 
     * @var float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $amount;
    
    /**
     * Set this to false if you only want to authorize for the amount.
     * 
     * @var ?bool $capture
     */
	#[\JMS\Serializer\Annotation\SerializedName('capture')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $capture = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('customer')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentCustomer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentCustomer $customer = null;
    
    /**
     * The language for this Payment.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\NewPaymentLanguage $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Shared\NewPaymentLanguage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentLanguage $language = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('level3')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentLevel3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentLevel3 $level3 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentOptions $options = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentMethod')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $paymentMethod;
    
    /**
     * Merchant defined values which can be used to internally identify the transaction. Whenever reference object is passing in the request body then please provide referenceNo inside of object as it is mandatory.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\NewPaymentReference $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentReference $reference = null;
    
    /**
     * Override business information which would normally appear on a customer's statement, making it easier for customers to identify transactions.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\NewPaymentSoftDescriptor $softDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('softDescriptor')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentSoftDescriptor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentSoftDescriptor $softDescriptor = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('storedCredentials')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentStoredCredentials')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentStoredCredentials $storedCredentials = null;
    
    /**
     * The surcharge amount for the new Payment.
     * 
     * @var ?float $surchargeAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('surchargeAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $surchargeAmount = null;
    
    /**
     * Tax value included in total amount. Sales tax in the US, or PST for Canadian merchants.
     * 
     * @var ?float $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $taxAmount = null;
    
    /**
     * Merchants/Customers to complete an additional verification step with the card issuer when paying.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\NewPaymentThreeDSecure $threeDSecure
     */
	#[\JMS\Serializer\Annotation\SerializedName('threeDSecure')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\NewPaymentThreeDSecure')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentThreeDSecure $threeDSecure = null;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->capture = null;
		$this->customer = null;
		$this->language = null;
		$this->level3 = null;
		$this->options = null;
		$this->paymentMethod = null;
		$this->reference = null;
		$this->softDescriptor = null;
		$this->storedCredentials = null;
		$this->surchargeAmount = null;
		$this->taxAmount = null;
		$this->threeDSecure = null;
	}
}

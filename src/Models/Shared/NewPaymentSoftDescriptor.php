<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Shared;


/**
 * NewPaymentSoftDescriptor - Override business information which would normally appear on a customer's statement, making it easier for customers to identify transactions.
 * 
 * @package TheLogicStudio\ExactPayments\Models\Shared
 * @access public
 */
class NewPaymentSoftDescriptor
{
    /**
     * F = Final Amount (amount is not expected to change for settlement). P = Pre-Authorization / Estimated Amount (amount may change between auth and settlement).
     * 
     * @var ?string $authTypeIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('authTypeIndicator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authTypeIndicator = null;
    
    /**
     * City name.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * 3-character alphabetical country code according to ISO 3166-1, eg: USA, CAN etc.
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * Name of the Doing Business As.
     * 
     * @var ?string $dbaName
     */
	#[\JMS\Serializer\Annotation\SerializedName('dbaName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dbaName = null;
    
    /**
     * email of the cutomer/merchant.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Merchant category code (MCCs) is four-digit numbers that describe a business's primary business activities. Please refer to the endpoint [Merchant Category Codes](/operations/listMerchantCategoryCodes) to get the list of acceptable MCC codes by Exact Payments.
     * 
     * @var ?string $mcc
     */
	#[\JMS\Serializer\Annotation\SerializedName('mcc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mcc = null;
    
    /**
     * Contact of the merchant.
     * 
     * @var ?string $merchantContactInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantContactInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantContactInfo = null;
    
    /**
     * Merchant Verification Value.
     * 
     * @var ?string $mvvMaid
     */
	#[\JMS\Serializer\Annotation\SerializedName('mvvMaid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mvvMaid = null;
    
    /**
     * Phone number of the cutomer/merchant.
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * Postal code of the city.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The two-digit country subdivision code where the customer is located. Refer to the two-digit country subdivision code defined in ISO 3166-2 for the countries listed in ISO 3166-1.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * Street name.
     * 
     * @var ?string $street
     */
	#[\JMS\Serializer\Annotation\SerializedName('street')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $street = null;
    
    /**
     * Identication number of the submerchant.
     * 
     * @var ?string $submerchantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('submerchantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $submerchantId = null;
    
    /**
     * The Tax Identifier of the merchant.
     * 
     * @var ?string $taxId
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxId = null;
    
	public function __construct()
	{
		$this->authTypeIndicator = null;
		$this->city = null;
		$this->countryCode = null;
		$this->dbaName = null;
		$this->email = null;
		$this->mcc = null;
		$this->merchantContactInfo = null;
		$this->mvvMaid = null;
		$this->phone = null;
		$this->postalCode = null;
		$this->state = null;
		$this->street = null;
		$this->submerchantId = null;
		$this->taxId = null;
	}
}

<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Shared;


class OnboardingRequest
{
    /**
     * The IP address of the client who sent the Onboarding Application.
     * 
     * @var ?string $clientIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientIp = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\OnboardingMerchant')]
    public OnboardingMerchant $merchant;
    
    /**
     * The type of entity being boarded. To onboard a Partner use `organization` and to onboard a Merchant use `account`.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\OnboardingRequestType $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<TheLogicStudio\ExactPayments\Models\Shared\OnboardingRequestType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OnboardingRequestType $type = null;
    
    /**
     * The Workflow Identifier that will be used to onboard the Application. If the Workflow identifier is not sent (or) the Workflow identifier sent is wrong, then the default Workflow of the Organization that is submitting the Onboarding Application will be used.
     * 
     * @var ?string $workflow
     */
	#[\JMS\Serializer\Annotation\SerializedName('workflow')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workflow = null;
    
	public function __construct()
	{
		$this->clientIp = null;
		$this->merchant = new \TheLogicStudio\ExactPayments\Models\Shared\OnboardingMerchant();
		$this->type = null;
		$this->workflow = null;
	}
}

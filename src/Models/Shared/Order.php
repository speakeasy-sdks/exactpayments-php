<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Shared;


class Order
{
    /**
     * Amount in smallest currency unit, eg: cents, including all surcharges, taxes etc.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * Optional billing details for the customer. If you have enabled AVS filters on your terminal, this becomes mandatory and AVS checks will be performed on the address.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\CustomerDetails $billing
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\CustomerDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerDetails $billing = null;
    
    /**
     * Set this to false if you only want to authorize for the amount. Defaults to true.
     * 
     * @var ?bool $capture
     */
	#[\JMS\Serializer\Annotation\SerializedName('capture')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $capture = null;
    
    /**
     * It will give some description of the order description
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Level 3 processing can capture and transmit the additional transaction data.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\Level3 $level3
     */
	#[\JMS\Serializer\Annotation\SerializedName('level3')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\Level3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Level3 $level3 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\OrderOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderOptions $options = null;
    
    /**
     * Merchant defined values which can be used to internally identify the transaction.
     * 
     * @var \TheLogicStudio\ExactPayments\Models\Shared\Reference $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\Reference')]
    public Reference $reference;
    
    /**
     * Override business information which would normally appear on a customer's statement, making it easier for customers to identify transactions.
     * 
     * @var ?\TheLogicStudio\ExactPayments\Models\Shared\SoftDescriptor $softDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('softDescriptor')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\SoftDescriptor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SoftDescriptor $softDescriptor = null;
    
    /**
     * This is assumed to already be included in the amount. (Available for Elavon processing only)
     * 
     * @var ?int $surchargeAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('surchargeAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $surchargeAmount = null;
    
    /**
     * Tax value included in total amount. Sales tax in the US, or PST for Canadian merchants. The smallest currency units, for example, cents in USD. This is assumed to already be included in the amount.
     * 
     * @var ?int $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $taxAmount = null;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->billing = null;
		$this->capture = null;
		$this->description = null;
		$this->level3 = null;
		$this->options = null;
		$this->reference = new \TheLogicStudio\ExactPayments\Models\Shared\Reference();
		$this->softDescriptor = null;
		$this->surchargeAmount = null;
		$this->taxAmount = null;
	}
}

<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace TheLogicStudio\ExactPayments\Models\Shared;


class OrderResponseLevel3
{
    /**
     * The smallest currency units, for example, cents in USD.
     * 
     * @var ?int $altTaxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('altTaxAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $altTaxAmount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('altTaxId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $altTaxId = null;
    
    /**
     * The smallest currency units, for example, cents in USD.
     * 
     * @var ?int $discountAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('discountAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $discountAmount = null;
    
    /**
     * The smallest currency units, for example, cents in USD.
     * 
     * @var ?int $dutyAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('dutyAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dutyAmount = null;
    
    /**
     * The smallest currency units, for example, cents in USD.
     * 
     * @var ?int $freightAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('freightAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $freightAmount = null;
    
    /**
     * $lineItems
     * 
     * @var ?array<\TheLogicStudio\ExactPayments\Models\Shared\OrderResponseLevel3LineItems> $lineItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('lineItems')]
    #[\JMS\Serializer\Annotation\Type('array<TheLogicStudio\ExactPayments\Models\Shared\OrderResponseLevel3LineItems>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $lineItems = null;
    
    /**
     * The postal code where the customer is located. Five-digit (example: 33558) or nine-digit (33558-3321) format is acceptable for the USA. Six digit(A0A 0A0) or (A0A0A0) format is acceptable for Canada.
     * 
     * @var ?string $shipFromZip
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipFromZip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shipFromZip = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shipTo')]
    #[\JMS\Serializer\Annotation\Type('TheLogicStudio\ExactPayments\Models\Shared\OrderResponseLevel3ShipTo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderResponseLevel3ShipTo $shipTo = null;
    
    /**
     * The smallest currency units, for example, cents in USD.
     * 
     * @var ?int $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $taxAmount = null;
    
    /**
     * Tax rate of the Order.
     * 
     * @var ?int $taxRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxRate')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $taxRate = null;
    
	public function __construct()
	{
		$this->altTaxAmount = null;
		$this->altTaxId = null;
		$this->discountAmount = null;
		$this->dutyAmount = null;
		$this->freightAmount = null;
		$this->lineItems = null;
		$this->shipFromZip = null;
		$this->shipTo = null;
		$this->taxAmount = null;
		$this->taxRate = null;
	}
}
